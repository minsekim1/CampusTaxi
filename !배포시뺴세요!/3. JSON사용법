
SELECT JSON_VALID(@json); -- JSON 포맷 검증
SELECT JSON_SEARCH(@json, 'one', 'kr'); -- JSON에서 조건에 맞는 최초 검색 위치 리턴
SELECT JSON_SEARCH(@json, 'all', 'kr'); -- JSON에서 조건에 맞는 모든 모든 위치 리턴
SELECT JSON_EXTRACT(@json, '$.users[1].name'); -- 두 번째 유저의 name 값 리턴
SELECT JSON_INSERT(@json, '$.users[0].hobby', 'cycle'); -- 첫 번째 유저의 hobby 속성을 생성 후 cycle 저장
SELECT JSON_REPLACE(@json, '$.users[0].name', 'Hong'); -- 첫 번째 유저의 name을 Hong으로 변경
SELECT JSON_REMOVE(@json, '$.users[0]');    -- 첫 번째 유저 정보를 삭제


출처: https://dololak.tistory.com/257 [코끼리를 냉장고에 넣는 방법]

JSON 규칙을 잘 따르는지 데이터를 검증하며 유효한 경우 1을 유효하지 않은 경우 0을 리턴합니다.
SELECT JSON_VALID(@json); -- 1

JSON 데이터에서 세 번째 인자로 넘긴 데이터를 기준으로 검색하고 최초로 찾은 위치를 반환합니다.
'kr'이라는 데이터는 첫 번째 유저의 country 속성에서 발견했습니다.
또한 두 번째 인자로 'one'을 넘기는 경우 조건에 맞는 최초의 데이터 하나를 검색합니다.
SELECT JSON_SEARCH(@json, 'one', 'kr'); -- "$.users[0].country"

두 번째 조건이 'one'이 아닌 'all' 인경우 검색된 모든 위치를 JSON 배열 형태로 반환합니다.
SELECT JSON_SEARCH(@json, 'all', 'kr'); -- ["$.users[0].country", "$.users[4].country"]


지정한 값을 추출합니다.
첫 번째 유저의 name 속성 값
SELECT JSON_EXTRACT(@json, '$.users[1].name'); -- "Lee"

지정한 위치에 속성과 값을 추가합니다.
첫 번째 유저의 hobby 속성에 cycle을 추가
SELECT JSON_INSERT(@json, '$.users[0].hobby', 'cycle'); -- {"users": [{"age": 26, "name": "Kim", "hobby": "cycle", "country": "kr"},....생략...

지정한 위치에 데이터를 수정합니다.
첫 번째 유저의 name 값을 Hong으로 수정.
SELECT JSON_REPLACE(@json, '$.users[0].name', 'Hong'); -- {"users": [{"age": 26, "name": "Hong", "country": "kr"},....생략...

지정한 위치의 데이터를 제거합니다.
첫 번째 유저 데이터를 제거.
SELECT JSON_REMOVE(@json, '$.users[0]'); -- {"users": [{"age": 21, "name": "Lee", "country": "usa"},....생략...

* JSON_MERGE 데이터 합치기
https://mysqldba.tistory.com/278